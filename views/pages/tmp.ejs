<!DOCTYPE html>
<!--[if lt IE 7 ]>
<html class="ie ie6" lang="en"> <![endif]-->
<!--[if IE 7 ]>
<html class="ie ie7" lang="en"> <![endif]-->
<!--[if IE 8 ]>
<html class="ie ie8" lang="en"> <![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
<html lang="en"> <!--<![endif]-->
    
<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Engenys</title>
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- Favicons
    ================================================== -->
    <link rel="shortcut icon" href="favicon.ico">

    <!-- CSS
    ================================================== -->
    <link rel="stylesheet" type="text/css" href="/js/jquery/jquery.mobile-1.4.5.min.css"/>
    <link rel="stylesheet" type="text/css" href="/css/app.css"/>

    <!-- Javascript
    ================================================== -->
    <script rel="javascript" type="text/javascript" src="js/jquery/jquery-2.1.1.min.js"></script>
    <script rel="javascript" type="text/javascript" src="js/jquery/jquery.mobile-1.4.5.min.js"></script>
    <script rel="javascript" type="text/javascript" src="js/main.js"></script>

</head>
<body>

    <!-- OVERVIEW page -->
    <div data-role="page" id="page-overview">

        <%- include('../partials/header'); %>

        <div data-role="main" class="ui-content cmax8">
            
        <div data-role="tabs" >
            <div data-role="navbar">
                
                <ul class="menu">
                    <li class="dropdown">
                        <button onclick="myFunction()" class="dropbtn">I/O</button>
                        <div id="myDropdown" class="dropdown-content">
                            <a href="#inputs" id="m-input" data-theme="a" data-ajax="false" class="ui-btn-active">Inputs</a>
                            <a href="#operator" id="m-operator" data-theme="a" data-ajax="false">Input</a>
                            <a href="#configs" id="m-config" data-theme="a" data-ajax="false">Configuration</a>
                        </div>
                    </li> 
                    <li>
                        <a href="#datetime" id="m-datetime" data-theme="a" data-ajax="false" class="dropbtn">Network</a>
                    </li>
                    <li>
                        <a href="#reader" id="m-datetime" data-theme="a" data-ajax="false" class="dropbtn">Reader</a>
                    </li>
                    <li>
                        <button onclick="toggleSystem()" class="dropbtn">System</button>
                        <div id="sysDrop" class="dropdown-content">
                            <a href="#datetime" id="m-datetime" data-theme="a" data-ajax="false">Datetime</a>
                            <a href="#operator" id="m-operator" data-theme="a" data-ajax="false">Operateur</a>
                            <a href="#log" id="m-log" data-theme="a" data-ajax="false">Log</a>
                            <a href="#system" id="m-config" data-theme="a" data-ajax="false">Log</a>
                        </div>
                    </li>
                    

                </ul>

          
            </div>
            
            <%if (admin) { %>
                <div id="inputs" class="ui-content" data-inset="true">
                    <ul data-role="listview" id="inputs_list" data-count-theme="b" data-inset="true" data-split-icon="gear">
                        <li data-role="list-divider" data-theme="a" id="unipi_input_divider">Digital</li>
                        <li data-role="list-divider" data-theme="a" id="unipi_ai_divider">Analog</li>
                        <li data-role="list-divider" data-theme="a" id="unipi_temp_divider">1Wire Sensors/Devices</li>
                        <li data-role="list-divider" data-theme="a" id="unipi_modbus_divider">Modbus extensions</li>
                    </ul>
                </div>
                <!-- /inputs -->


                <div id="operator" class="ui-content" data-inset="true">
                    <form  id="form-operator" method="post">
                        <div class="form-input">

                            <div class="ui-field-contain ">
                                <label  for="old_password ">Old Admin Password </label>
                                <input  type="password" name="old_password"   value="">
                            </div>
                            <div class="ui-field-contain ">
                                <label  for="new_password">New Admin Password</label>
                                <input  type="password" name="new_password"   value="">
                            </div>
                            <hr>
                            <div class="ui-field-contain ">
                                <label  for="old_guest_password">Old Guest Password</label>
                                <input  type="password" name="old_guest_password"   value="">
                            </div>
                            <div class="ui-field-contain ">
                                <label  for="new_guest_password">New Guest Password </label>
                                <input  type="password" name="new_guest_password"   value="">
                            </div>
                            

                        </div>
    
                        <div>
                            <button type="submit" class="ui-link ui-btn ui-btn-a ui-tabs-anchor ui-btn-active">Submit</button>
                        </div>
                    </form>
                </div>

                <div id="system" class="ui-content" data-inset="true">
                    <ul data-role="listview" id="system_list" data-count-theme="b" data-inset="true" data-split-icon="gear">
                        <li data-role="list-divider" data-theme="a" id="unipi_neuron_divider">Devices</li>
                        <li data-role="list-divider" data-theme="a" id="unipi_uart_divider">UART</li>
                        <li data-role="list-divider" data-theme="a" id="unipi_watchdog_divider">Watchdog</li>
                        <li data-role="list-divider" data-theme="a" id="unipi_wifi_divider">WiFi Adapters</li>
                        <li data-role="list-divider" data-theme="a" id="unipi_extension_divider">Extensions</li>
                    </ul>
                </div>
                <!-- /system -->
                
                <div id="configs" class="ui-content" data-inset="true">
                    <div id="unipi_save_all_button_div">
                        <button class="ui-btn ui-corner-all" id="unipi_save_all_button">Save current state to Flash</button>
                    </div>
                </div>
                <!-- /configs -->

            <% } %>
                <div id="outputs" class="ui-content" data-inset="true">
                    <ul data-role="listview" id="outputs_list" data-count-theme="b" data-inset="true" data-split-icon="gear">
                        <li data-role="list-divider" data-theme="a" id="unipi_light_channel_divider" style="display: none;">DALI Channels</li>
                        <li data-role="list-divider" data-theme="a" id="unipi_digital_divider">Digital</li>
                        <li data-role="list-divider" data-theme="a" id="unipi_relay_divider">Relays</li>
                        <li data-role="list-divider" data-theme="a" id="unipi_led_divider">LEDs</li>
                        <li data-role="list-divider" data-theme="a" id="unipi_ao_divider">Analog</li>
                    </ul>
                </div>
                <!-- /outputs -->
            
            <div id="networks" class="ui-content" data-inset="true">
                <form  id="form-network" method="post">
                    <div class="ui-field-contain">
                        <label for="dhcp">DHCP</label>
                        <input type="checkbox" name="dhcp" id="dhcp"> 
                    </div>
                    <div class="form-input">
                        <div class="ui-field-contain ">
                            <label  for="ip">Ip</label>
                            <input  type="text" name="hostname" pattern="\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b" class="network-input"   value="<%= (hostname) ? hostname : 'error' %>">
                        </div>
                        <div class="ui-field-contain">
                            <label for="mask">Mask</label>
                            <input type="text" name="mask"  class="network-input" value="<%= (masque) ? masque : '' %>" >  
                        </div>
                        <div class="ui-field-contain">
                            <label for="gateway">Gateway</label>
                            <input type="text" name="gateway"  class="network-input" value="<%= (passerelle) ? passerelle : '' %>">
                        </div>
                        <div class="ui-field-contain">
                            <label for="gateway">Ip Server</label>
                            <input type="text" name="server"  class="network-input" value="<%= (ipserveur) ? ipserveur : '' %>">
                        </div>
                        <div class="ui-field-contain">
                            <label for="dns1">DNS 1</label>
                            <input type="text"  name="dns1" class="network-input" value="<%= (dns1) ? dns1 : '' %>">
                        </div>
                        <div class="ui-field-contain">
                            <label for="dns2">DNS 2</label>
                            <input type="text"  name="dns2" class="network-input" value="<%= (dns2) ? dns2 : '' %>">
                        </div>
                    </div>

                    <div style="display: flex;display: block ruby;text-align:end">
                        <button type="submit"  class="ui-link ui-btn ui-btn-a ui-tabs-anchor ui-btn-active">Submit</button>
                        <button id="reload-network"  class="ui-link ui-btn ui-btn-a ui-tabs-anchor ">Reload</button>

                    </div>
                </form>

            </div>

            <!--Readers-->
            <div id="readers" class="ui-content" data-inset="true">
                <form action="/update-reader" id="form-reader" method="post">
                    <h1>Reader A</h1>
                    <div class="form-input">
                        <div class="ui-field-contain ">
                            <label  for="">Type</label>
                            <select name="type_a" id="" value="<%= (type_a) ? type_a : '' %>">
                                <option value="HEXADECIMAL">Hexadecimal</option>
                                <option value="DECIMAL">Decimal</option>
                                <option value="ASCII">Ascii</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-input">
                        <div class="ui-field-contain " >
                            <label  for="">First Character</label>
                            <input type="number" value="<%= (first_character_a) ? first_character_a : 0 %>" name="first_character_a">
                        </div>
                    </div>
                    <div class="form-input">
                        <div class="ui-field-contain ">
                            <label  for="">Number Reader Character</label>
                            <input type="number" value="<%= (read_character_a) ? read_character_a : 0 %>" name="read_character_a" >
                        </div>
                    </div>
                    <h1>Reader B</h1>
                    <div class="form-input">
                        <div class="ui-field-contain ">
                            <label  for="">Type</label>
                            <select name="type_b"  id="">
                                <option value="HEXADECIMAL">Hexadecimal</option>
                                <option value="DECIMAL">Decimal</option>
                                <option value="ASCII">Ascii</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-input">
                        <div class="ui-field-contain ">
                            <label  for="">First Character</label>
                            <input type="number"  value="<%= (first_character_b) ? first_character_b : 0 %>" name="first_character_b">
                        </div>
                    </div>
                    <div class="form-input">
                        <div class="ui-field-contain ">
                            <label  for="">Number Reader Character</label>
                            <input type="number" value="<%= (read_character_b) ? read_character_b : 0 %>" name="read_character_b">
                        </div>
                    </div>

                    <div>
                        <button type="submit" class="ui-link ui-btn ui-btn-a ui-tabs-anchor ui-btn-active">Submit</button>
                    </div>
                </form>

            </div>
            <!--Readers-->

            <div id="datetime" class="ui-content" data-inset="true">

                <div>
                    <form action="/update-time"  id="form-time" method="post">
                        
                        <div class="form-input">
                            <div class="ui-field-contain ">
                                <label  for="">Definir l'heure automatique</label>
                                <input type="checkbox" name="automatic" id="automatic"     >
                                <label for="automatic"></label>
                            </div>
                        </div>
                        <div class="form-input">
                            <div class="ui-field-contain ">
                                <label  for="">Date et Heure Actuelle</label>
                                <input type="datetime-local" name="time" id="input-date" >
                            </div>
                        </div>
                        <div id="form-automatic"  class="<%= (date_status == 0) ? 'hide' : 'show' %>"  >
                            <div class="form-input">
                                <div class="ui-field-contain " >
                                    <label  for="">Serveur NTP1</label>
                                    <input type="text" value="<%= (ntp) ? ntp[0] : '' %>" name="ntp1">
                                </div>
                            </div>
                            <div class="form-input">
                                <div class="ui-field-contain ">
                                    <label  for="">Serveur NTP2</label>
                                    <input type="text" value="<%= (ntp) ? ntp[1] : '' %>" name="ntp2" >
                                </div>
                            </div>
                            <div class="form-input">
                                <div class="ui-field-contain ">
                                    <label  for="">Fuseau horaire</label>
                                    <%- include('../partials/timezone'); %>
                                </div>
                            </div>

                        </div>
                        


                        <div>
                            <button type="submit" class="ui-link ui-btn ui-btn-a ui-tabs-anchor ui-btn-active">Submit</button>
                        </div>
                    </form>
                </div>   
            </div>


            <div id="log" class="ui-content" data-inset="true">
                <%= (log) ? log : 'error' %>         
            </div>
            
            <!-- /content -->
        </div>
        <!-- /tabs -->
        </div>

        <!-- /footer -->
        <div data-role="popup" id="unipi_config_form_div">
            <form id="unipi_config_form">
                <div style="padding:20px 20px;" class="" id="unipi_config_form_inner_div">
                </div>
            </form>
        </div>
        

    </div>

    <script>
        $('#dhcp').on('click', function(){
            if ( $(this).is(':checked') ) {
                //$('.form-input').hide();
                $('.network-input').attr('disabled','disabled');
            } 
            else {
                //$('.form-input').show();
                $('.network-input').attr('disabled', false);
            }
        });

        $('#automatic').on('click', function(){

            if ( $(this).is(':checked') ) {
                $('input[type="datetime-local"]').attr( 'disabled', 'disabled');
                $("#form-automatic").removeClass("hide");
                $("#form-automatic").addClass("show");
            } 
            else {
                $('input[type="datetime-local"]').attr( 'disabled', false);
                $("#form-automatic").addClass("hide");
                $("#form-automatic").removeClass("show");
            }
        });

        $("#form-operator").submit(function(event){
            // Prevent default posting of form - put here to work in case of errors
            event.preventDefault();

            // setup some local variables
            var $form = $(this);

            // Serialize the data in the form
            var serializedData = $form.serialize();

            // Fire off the request to /form.php
            request = $.ajax({
                url: "/update-operator",
                type: "post",
                data: serializedData
            });

            // Callback handler that will be called on success
            request.done(function (response, textStatus, jqXHR){
                top.location.href = '/home';
            });

            // Callback handler that will be called on failure
            request.fail(function (jqXHR, textStatus, errorThrown){
                alert("Incorrect password");

            });


        });

        $("#form-network").submit(function(event){
            // Prevent default posting of form - put here to work in case of errors
            event.preventDefault();

            // setup some local variables
            var $form = $(this);

            // Serialize the data in the form
            var serializedData = $form.serialize();

            // Fire off the request to /form.php
            request = $.ajax({
                url: "/update-network",
                type: "post",
                data: serializedData
            });

            // Callback handler that will be called on success
            request.done(function (response, textStatus, jqXHR){
                top.location.href = '/home';
            });

            // Callback handler that will be called on failure
            request.fail(function (jqXHR, textStatus, errorThrown){
                alert("Error");

            });


        });

        $("#form-reader").submit(function(event){
            // Prevent default posting of form - put here to work in case of errors
            event.preventDefault();

            // setup some local variables
            var $form = $(this);

            // Serialize the data in the form
            var serializedData = $form.serialize();

            // Fire off the request to /form.php
            request = $.ajax({
                url: "/update-reader",
                type: "post",
                data: serializedData
            });

            // Callback handler that will be called on success
            request.done(function (response, textStatus, jqXHR){
                top.location.href = '/home';
            });

            // Callback handler that will be called on failure
            request.fail(function (jqXHR, textStatus, errorThrown){
                alert("Error");

            });


        });
       
        $("#reload-network").click(  function(event){
            // Prevent default posting of form - put here to work in case of errors
            event.preventDefault();

            // setup some local variables
            var $form = $(this);

            // Serialize the data in the form
            var serializedData = $form.serialize();

            // Fire off the request to /form.php
            request = $.ajax({
                url: "/reload-network",
                type: "post",
            });

            // Callback handler that will be called on success
            request.done(function (response, textStatus, jqXHR){
                top.location.href = '/home';
            });

            // Callback handler that will be called on failure
            request.fail(function (jqXHR, textStatus, errorThrown){
                alert("Error");

            });


        });

        $('#form-time').submit(function(event){
            // Prevent default posting of form - put here to work in case of errors
            event.preventDefault();

            // setup some local variables
            var $form = $(this);

            // Serialize the data in the form
            var serializedData = $form.serialize();

            // Fire off the request to /form.php
            request = $.ajax({
                url: "/update-time",
                type: "post",
                data: serializedData
            });

            // Callback handler that will be called on success
            request.done(function (response, textStatus, jqXHR){
                top.location.href = '/home';
            });

            // Callback handler that will be called on failure
            request.fail(function (jqXHR, textStatus, errorThrown){
                alert("Error");

            });


        });

        
        function myFunction() {
            document.getElementById("myDropdown").classList.toggle("show");
        }
        function toggleSystem() {
            document.getElementById("sysDrop").classList.toggle("show");
        }
        // Close the dropdown menu if the user clicks outside of it
        window.onclick = function(event) {
            if (!event.target.matches('.dropbtn')) {
                var dropdowns = document.getElementsByClassName("dropdown-content");
                var i;
                for (i = 0; i < dropdowns.length; i++) {
                var openDropdown = dropdowns[i];
                if (openDropdown.classList.contains('show')) {
                    openDropdown.classList.remove('show');
                }
                }
            }
        } 
    </script>

    <script type="text/javascript">


        $(document).ready(function() {
            webSocketRegister();
            updateValues();
            clockUpdate();
            setInterval(clockUpdate, 1000);
            inputUpdate();
            $('input[type="datetime-local"]').setNow();

        });

        function clockUpdate() {

            var date = new Date();
            $('.digital-clock').css({'color': '#000'});
        
            function addZero(x) {
                if (x < 10) {
                return x = '0' + x;
                } else {
                return x;
            }
            }

            function twelveHour(x) {
                if (x > 12) {
                return x = x - 12;
                } else if (x == 0) {
                return x = 12;
                } else {
                return x;
                }
            }

            var h = addZero(twelveHour(date.getHours()));
            var m = addZero(date.getMinutes());
            var s = addZero(date.getSeconds());

            $('.digital-clock').text(h + ':' + m + ':' + s)

            var dd = String(date.getDate()).padStart(2, '0');
            var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!
            var yyyy = date.getFullYear();

            today = dd + '/'+mm + '/' + yyyy;
            $('.date').text(today)

        }

        $.fn.setNow = function (onlyBlank) {
            var now = new Date($.now())
                , year
                , month
                , date
                , hours
                , minutes
                , seconds
                , formattedDateTime
                ;

            year = now.getFullYear();
            month = now.getMonth().toString().length === 1 ? '0' + (now.getMonth() + 1).toString() : now.getMonth() + 1;
            date = now.getDate().toString().length === 1 ? '0' + (now.getDate()).toString() : now.getDate();
            hours = now.getHours().toString().length === 1 ? '0' + now.getHours().toString() : now.getHours();
            minutes = now.getMinutes().toString().length === 1 ? '0' + now.getMinutes().toString() : now.getMinutes();
            seconds = now.getSeconds().toString().length === 1 ? '0' + now.getSeconds().toString() : now.getSeconds();

            formattedDateTime = year + '-' + month + '-' + date + 'T' + hours + ':' + minutes + ':' + seconds;

            if ( onlyBlank === true && $(this).val() ) {
                return this;
            }

            $(this).val(formattedDateTime);

            return this;
        }

    </script>
</body>

</html>
